#!/bin/sh
#
# Script to start, stop & continue hamster time tracker activities from dmenu.
#
# - To cancel, type escape
# - If you enter a single minus sign ("-") at the prompt, time tracking is stopped
# - If you enter a single forward slash ("/") at the prompt, hamster-time-tracker is launched
# - Anything else will start a new task. Format is the hamster format: `activity`@`category`
# - Completion list shows all entries, with the entries most recently entered via 
#   hamster-dmenu first. So pressing 'enter' will continue the last activity.
#
# Requirements: hamster-cli, rofi, notify-send, sed and awk
# The script can be invoked with any rofi settings (eg. -i for case insensitivity)
#

# Paths to utilities
hamster='/usr/bin/hamster-time-tracker'
hamstercli='/usr/bin/hamster-cli'
rofi='/usr/bin/rofi -dmenu'
notify='/usr/bin/notify-send hamster'
notifycrit='/usr/bin/notify-send -u critical hamster'

# Shell shorthands
echo_with_nl='printf %b'
make_unique='awk !a[$0]++'
remove_empty_lines='sed /^\s*$/d'

# Caching
cachedir=${XDG_CACHE_HOME:-'$HOME/.cache'}
cache_content=''
if [ -d "${cachedir}" ]; then
        cache=${cachedir}/hamster-rofi
else
        cache=${HOME}/.hamster-rofi-cache
fi

# Build list of entries
if [ -f "${cache}" ]
then
    cache_content=`cat ${cache}`
    entries=${cache_content}\\n`${hamstercli} list-activities`
    # Ensure each entry is unique and remove blank lines
    entries=`${echo_with_nl}  "${entries}" | ${make_unique} | ${remove_empty_lines}`
else
    entries=`${hamstercli} list-activities`
fi

# Get prompt
activity=`${echo_with_nl} "${entries}" | ${dmenu} "$@"`

# Do nothing on escape
if [ $? -eq 1 ]
then
    exit 0
fi

# Stop on single -
if [ "${activity}" = "-" ]
then
    ${hamstercli} stop
    exit 0
fi

# Run hamster on single '/'
if [ "${activity}" = "/" ]
then
    exec ${hamster}
    exit 0
fi

# Otherwise start a new activity
$hamstercli start "$activity"
if [ $? -eq 0 ]
then
    # Update the mru cache
    ${echo_with_nl} "${activity}\n${cache_content}" | ${make_unique} > ${cache}
else
    $notifycrit "Hamster failed to start task"
    exit 1
fi
